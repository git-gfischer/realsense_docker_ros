# A docker-compose must always start with the version tag. "3" is the latest version at this time.
version: "3"
# Use the keyword 'services' to start to define services.
services:          # 1 service = 1 container.
  network_service:
    image: "realsense_ros_humble:latest"       # image name with the version
    #container_name: Realsense_Network_Service
    network_mode: "bridge"
    environment:
      ROS_DOMAIN_ID: $ROS_DOMAIN_ID
    tty: true

  d435:
    image: "realsense_ros_humble:latest"       # image name with the version
    #container_name: Realsense_Camera_d435
    environment:
      DISPLAY: $DISPLAY
      PATH: $PATH
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
      ROS_DOMAIN_ID: $ROS_DOMAIN_ID
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
      - /dev/bus/usb:/dev/bus/usb
    device_cgroup_rules:
      - 'c 189:* rmw'
      - 'c 81:* rmw'
    network_mode: "service:network_service"
    privileged: true
    tty: true
    depends_on:
      - network_service
    command: bash /home/realsense_d435_cam.sh $D435_SN $D435_NAME $D435_WIDTH $D435_HEIGHT $POINT_CLOUD

  d405:
    image: "realsense_ros_humble:latest"       # image name with the version
    #container_name: Realsense_Camera_d405
    environment:
      DISPLAY: $DISPLAY
      PATH: $PATH
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
      ROS_DOMAIN_ID: $ROS_DOMAIN_ID
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
      - /dev/bus/usb:/dev/bus/usb
    device_cgroup_rules:
      - 'c 189:* rmw'
      - 'c 81:* rmw'
    network_mode: "service:network_service"
    privileged: true
    tty: true
    depends_on:
      - network_service
    command: bash /home/realsense_d405_cam.sh $D405_SN $D405_NAME $D405_WIDTH $D405_HEIGHT

  t265:
    image: "realsense_ros_humble:latest"       # image name with the version
    #container_name: Realsense_Camera_t265
    environment:
      DISPLAY: $DISPLAY
      PATH: $PATH
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
      ROS_DOMAIN_ID: $ROS_DOMAIN_ID
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
      - /dev/bus/usb:/dev/bus/usb
    device_cgroup_rules:
      - 'c 189:* rmw'
      - 'c 81:* rmw'
    network_mode: "service:network_service"
    privileged: true
    tty: true
    depends_on:
      - network_service
    command: bash /home/realsense_t265_cam.sh $T265_SN $T265_NAME

  enumerate_devices:
    image: "realsense_ros_humble:latest"       # image name with the version
    container_name: Realsense_enumerate_devices
    environment:
      DISPLAY: $DISPLAY
      PATH: $PATH
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
      ROS_DOMAIN_ID: $ROS_DOMAIN_ID
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
      - /dev/bus/usb:/dev/bus/usb
    device_cgroup_rules:
      - 'c 189:* rmw'
      - 'c 81:* rmw'
    network_mode: "service:network_service"
    privileged: true
    tty: true
    command: rs-enumerate-devices

  rqt_image_view:
    image: "realsense_ros_humble:latest"       # image name with the version
    container_name: RQT_image_view
    environment:
      DISPLAY: $DISPLAY
      PATH: $PATH
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
      ROS_DOMAIN_ID: $ROS_DOMAIN_ID
    volumes: 
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/root/.Xauthority
      - /dev/bus/usb:/dev/bus/usb
    device_cgroup_rules:
      - 'c 189:* rmw'
      - 'c 81:* rmw'
    network_mode: "service:network_service"
    privileged: true
    tty: true
    depends_on:
      - network_service
    command: ros2 run rqt_image_view rqt_image_view
